---
title: "HW05"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

### Import all the libraries

```{r}
#install.packages("psych")
library("tidyverse")
#library("readr")
library(ggplot2)

```

# **Summarizing Student Data**

\## Task 1: Read in the Data and Modify\

\### Use local path and combined both the datasets

```{r}
df1 <- read.csv("../Homework5/student-mat.csv", sep = ";")
df2 <- read.csv("../Homework5/student-por.csv", sep = ";")

comb_df <- merge(df1, df2, by = c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))
head(comb_df)
#View(comb_df)

```

-   Warning message: In inner_join(data1, data2, by = c("school", "sex", "age", "address", : Detected an unexpected many-to-many relationship between `x` and `y`. ℹ Row 79 of `x` matches multiple rows in `y`. ℹ Row 79 of `y` matches multiple rows in `x`. ℹ If a many-to-many relationship is expected, set `relationship = "many-to-many"` to silence this warning.

### Use and Inner_join() to merge the data

```{r}
#d1=read.table("student-mat.csv",sep=";",header=TRUE)
#d2=read.table("student-por.csv",sep=";",header=TRUE)

#d3=merge(d1,d2,by=c("school","sex","age","address","famsize","Pstatus","Medu"#,"Fedu","Mjob","Fjob","reason","nursery","internet"))
#print(nrow(d3)) # 382 students

math_data <- read_delim("../Homework5/student-mat.csv", delim  = ";")
por_data <- read_delim("../Homework5/student-por.csv", delim  = ";")
colnames(math_data)
colnames(por_data)

#combine_data <- inner_join(math_data, por_data, by = #c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet"))

combine_data <- inner_join(math_data, por_data,  by = setdiff(colnames(math_data), c("G1", "G2", "G3", "paid", "absences")))
print(nrow(combine_data))
print(combine_data)
colnames(combine_data)

other_comb_dat <- c("G1", "G2", "G3", "paid", "absences")

```

### \* Math data, portugueses, and combined data choose four categorical variables and convert into factors variables in each tibble

```{r}
print(unique(math_data$sex))
print(unique(math_data$address))
print(unique(math_data$school))
```

```{r}
#intersect(names(data1), names(data2))
math_data <- math_data |>
  mutate(school = factor(school, levels = c("GP", "MS"), labels = c("Gabriel Pereira", "Mousinho da Silveira")),
         sex = factor(sex, levels = c("F", "M"), labels = c("Female", "Male")),
         address = factor(address, levels = c("U","R"), labels = c("Urban", "Rural")),
         reason = factor(reason, levels = c("home","reputation","course","other"),labels = c("Home", "Reputation", "Course", "Other")))

math_data

```

```{r}
por_data <- por_data |>
  mutate(sex = factor(sex, levels = c("F", "M"), labels = c("Female", "Male")),
         address = factor(address, levels = c("U","R"), labels = c("Urban", "Rural")),
         school = factor(school, levels = c("GP", "MS"), labels = c("Gabriel Pereira", "Mousinho da Silveira")),
         reason = factor(reason, levels = c("home","reputation","course","other"), labels = c("Home", "Reputation", "Course", "Other")))

por_data
```

```{r}
combine_data <- combine_data |>
  mutate(sex = factor(sex, levels = c("F", "M"), labels = c("Female", "Male")),
         address = factor(address, levels = c("U","R"), labels = c("Urban", "Rural")),
         school = factor(school, levels = c("GP", "MS"), labels = c("Gabriel Pereira", "Mousinho da Silveira")),
         reason = factor(reason, levels = c("home","reputation","course","other"), labels = c("Home", "Reputation", "Course", "Other")))

head(combine_data)
#View(combine_data)
```

### Task 2: Summarize the Data

### \* Look at how the data is stored and see if everything makes sense.

• Document the missing values in the data

```{r}
cat("Structure of combine data ",str(combine_data))
#View(combine_data)
head(combine_data)
#cat("summary of combined data \n", summary(combine_data))

com_data_summ <- combine_data |>
  summarise(across(where(is.numeric), list(mean = mean, std = sd, med = median)))
#View(com_data_summ)

com_data_summ_long <- com_data_summ |>
  pivot_longer(cols = everything(),
               names_to = c("Feature", "Statistic"),
               names_sep = "_",  # Separate Feature and statistic by "_"
               values_to = "value")

# View the result in long format
#View(com_data_summ_long)

head(com_data_summ_long)

```

-   Some data validation :---

```{r}
numeric_data <- combine_data |>
  select(where(is.numeric))

head(psych::describe(numeric_data))
```

-   Determine Rate of Missing Values

```{r}
colSums(is.na(combine_data))
# No missing values
```

```{r}
# Find the missing values
loc_missing_data <- which(is.na(combine_data), arr.ind = TRUE)
cat("Location of Missing values in row and column are",loc_missing_data)

miss_data <- sum(is.na(combine_data))
cat("Number of missing values in Tibble are:-\n", miss_data)
```

### \* In this Combine Data there is no missing values.

## Categorical Variables

-   Create a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables you created previously. Use table() to accomplish this. **–** Interpret a number from each resulting table (that is, pick out a value produced and explain what that value means.)

-   Create a conditional two-way table using table(). That is, condition on one variable’s setting and create a two-way table. Do this using two different methods:

    **–** Once, by subsetting the data (say with filter()) and then creating the two-way table **–** Once, by creating a three-way table and subsetting it.

-   Create a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().

-   Create a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.

```{r}
# 1.a.  One-way contingency table
print("One-way contingency Table \n")
table(combine_data$sex, useNA = "always")

# there are 174 Female and 146 Male 
```

```{r}
# b. Two-way contingency table
print("Two-way contingency table\n")
table(combine_data$sex, combine_data$school)

```

-   In Gabriel Pereira school there are 153 Female and 134 Male students.

-   In Mousinho da Silveira there are 21 Female and 12 Male students.

```{r}
# c. Three-way contingency table
print("Three-way contingency table")
table(combine_data$school, combine_data$address, combine_data$reason)

```

-   In 3 way contingency table we differentiate data according to reason. In every reason we take the school and in every school how many students are coming from Urban and Rural address.

### 2. Create a conditional two-way table using table().

-   **–** Once, by subsetting the data (say with filter()) and then creating the two-way table.

```{r}
cond_data <- filter(combine_data, address == "Urban")
cond_table <- table(cond_data$sex, cond_data$school)
cond_table
```

-   In this we see the urban address only that in urban area how many Female and Male are coming to both the schools.

```{=html}
<!-- -->
```
-   **–** Once, by creating a three-way table and subsetting it.

```{r}
three_way_table <- table(combine_data$reason, combine_data$school,combine_data$address)
cond_three_way_table <- three_way_table["Course",	,]
cond_three_way_table

```

### 3. Create a two-way contingency table using group_by() and summarize() from dplyr. Then use

pivot_wider() to make the result look more like the output from table().

```{r}
combine_data |>
  group_by(address,school) |>
  summarize(count = n(), .groups = 'drop') |> #.groups = "drop" :-- drop the grouping structure after summarization
  pivot_wider(names_from = address, values_from = count)
  
```

### 4. Create a stacked bar graph and a side-by-side bar graph.

-   Stacked Bar Graph

```{r}
ggplot(combine_data) +
  geom_bar(aes(x=school, fill = reason)) +
  labs(
    title = "Distribution of Students by school and Reason for choosing the school",
    x = "School",
    y = "Number of Students"
  ) +
  theme_classic()

```

-   Total height of each bar represents the total number of students enrolled in each school.

-   Side by side bar graph

```{r}
ggplot(data = combine_data) +
  aes(x = sex, fill = school) +
  geom_bar(position = "dodge") +
  scale_fill_discrete("school") +
  facet_wrap(~sex) +
  labs(
    title = "Count of students by school and sex",
    x = "Sex",
    y = "Number of Students"
  ) +
  theme_gray()
  

```

-    Comparison between Male and Female students according to school. In this it is showing that number of Female are more in Gabriel Pereira school.

## Numerical Variables (and across groups)

-   Here is age, absences and the three test grades variables (G1, G2 and G3) are numeric. \### 1. • Find measures of center and spread for three of these variables (including at least one G3 variable) – Repeat while subsetting the data in a meaningful way.

```{r}
# Measure of center
meas_of_center <- combine_data |>
  summarize(across(c("age","absences.x","absences.y","G3.x", "G3.y"),
                  list("Mean" = mean, "Median" = median, "Std" = sd, "IQR" = IQR ),
                  .names = "{.col}_{.fn}"))

meas_of_center_long <- meas_of_center |>
  pivot_longer(cols = everything(),
               names_to = c("Feature", "Statistic"),
                            names_sep = "_",
               values_to = "value")

# View the result in long format
head(meas_of_center_long)
meas_of_center_long


```

-   Subset the data according to sex = Male

```{r}
subset_sex_statistics <- combine_data |>
  filter(sex=="Male") |>
  summarize(across(c("age","absences.x","absences.y","G3.x", "G3.y"),
                  list("Mean" = mean, "Median" = median, "Std" = sd, "IQR" = IQR ),
                  .names = "{.col}_{.fn}"))

subset_meas_of_center_long <- subset_sex_statistics |>
  pivot_longer(cols = everything(),
               names_to = c("Feature", "Statistic"),
                            names_sep = "_",
               values_to = "value")
#View(subset_meas_of_center_long)
head(subset_meas_of_center_long)

```

-   subset the data according to school

```{r}
subset_school_statistics <- combine_data |>
  filter(school=="Gabriel Pereira") |>
  summarize(across(c("age","absences.x","absences.y","G3.x", "G3.y"),
                  list("Mean" = mean, "Median" = median, "Std" = sd, "IQR" = IQR ),
                  .names = "{.col}_{.fn}"))

subset_school_meas_of_center_long <- subset_school_statistics |>
  pivot_longer(cols = everything(),
               names_to = c("Feature", "Statistic"),
                            names_sep = "_",
               values_to = "value")
head(subset_school_meas_of_center_long)

```

-   Find measures of center and spread across a single grouping variable for three of these variables (including a G3 variable as one of them)

```{r}
subset_school_statistics <- combine_data |>
  group_by(school) |>
  summarize(across(c("age","absences.x","absences.y","G3.x", "G3.y"),
                  list("Mean" = mean, "Median" = median, "Std" = sd, "IQR" = IQR ),
                  .names = "{.col}_{.fn}"))

subset_school_meas_of_center_long <- subset_school_statistics |>
  pivot_longer(cols = -school,
               names_to = c("Feature", "Statistic"),
                            names_sep = "_",
               values_to = "value")
head(subset_school_meas_of_center_long)
```

-   Find measures of center and spread across two grouping variables for three of these variables (including a G3 variable as one of them)

```{r}
school_sex_statistics <- combine_data |>
  group_by(school, sex) |>
  summarize(across(c("age","absences.x","absences.y","G3.x", "G3.y"),
                  list("Mean" = mean, "Median" = median, "Std" = sd, "IQR" = IQR ),
                  .names = "{.col}_{.fn}"))

school_sex_meas_of_center_long <- school_sex_statistics |>
  pivot_longer(cols = -c("school","sex"),
               names_to = c("Feature", "Statistic"),
                            names_sep = "_",
               values_to = "value")
head(school_sex_meas_of_center_long)
```

-   Create a correlation matrix between all of the numeric variables

```{r}
corr_mat <- combine_data |>
  select(where(is.numeric))

#pair_cor_mat <- cor(corr_mat ,use = "pairwise.complete.obs")
#pair_cor_ma
cor(corr_mat)
```

-   Create a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the categorical variables (that is, create graphs that can compare the distributions across the groups on the same plot (no faceting here)). Add appropriate labels and titles. \# create 6 graphs

```{r}
# Histogram
hist_age <- ggplot(combine_data, aes(x = age, fill = sex)) +
  geom_histogram(position = "dodge", alpha = 0.6, binwidth = 1) +
  labs(
    title = "Histogram of Age by Sex",
    x = "Age",
    y = "Count",
    fill = "Sex"
  ) +
  theme_minimal()
hist_age
```

-   The distribution of ages is fairly consistent between males and females. Both the groups have age between 15 and 18.

```{r}
histogram_plot <- ggplot(combine_data, aes(x = age, fill = school)) +
  geom_histogram(binwidth = 1, color = "black", position = "dodge") +
  labs(
    title = "Histogram of Age by School",
    x = "Age",
    y = "Count",
    fill = "School"
  ) +
  theme_minimal()

histogram_plot
```

-   Gabriel Pereiran has more population compare to Mousinho da Silveira school.

```{r}
# kernel density plot

school_kernel_plot <- ggplot(combine_data, aes(x = age, color = school, linetype = as.factor(failures))) +
  geom_density(alpha = 0.5, aes(fill = as.factor(failures))) +
  theme_minimal() +
  labs(
    title = "Kernel Density Plot of Age by school and Failures",
    x = "Age",
    y = "Density",
    color = "school",
    linetype = "Number of Failures",
    fill = "Number of Failures"
  )

school_kernel_plot
```

-   In this Graph it indicates that the majority of students, especially at younger ages, have no academic failures. There is a notable peak of students around age 18 for both schools, but *Gabriel Pereira* seems to have more students in this age group without failures, while *Mousinho da Silveira* shows more students with multiple failures in older age groups.

```{r}
# Kernel Density Plot
kernel_plot <- ggplot(combine_data, aes(x = age, color = address, linetype = as.factor(failures))) +
  geom_density(alpha = 0.5, aes(fill = as.factor(failures))) +
  theme_minimal() +
  labs(
    title = "Kernel Density Plot of Age by Reason and Failures",
    x = "Age",
    y = "Density",
    color = "address",
    linetype = "Number of Failures",
    fill = "Number of Failures"
  )

kernel_plot
```

-   It is showing that most significant peak around age of 16-18 for students with 0 failures. Here is fewer students from rural address.

```{r}
# boxplot
school_boxplot <- ggplot(combine_data) +
  geom_boxplot(aes(x = school, y = age, fill = school)) +
  geom_jitter(aes(x = school, y = age), width = 0.1, alpha = 0.3) + 
  labs(
    title = "Age Distribution by School",
    x = "School",
    y = "Age",
    fill = "School"
  ) +
  theme_minimal()

school_boxplot
```

-   here we can see some outliers in both the school.

-   Gabriel Pereira has a more concentrated age range with the majority of students near by 16 to 18 years.

-   Mousinha da Silveira has a range above the 18 years.

```{r}
# Boxplot
reason_boxplot <- ggplot(combine_data) +
 geom_boxplot(aes(x = reason, y = absences.x, fill = reason))
 
reason_boxplot 
```

-   Create two scatter plots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.

```{r}
#numeric_scatter <- ggplot(combine_data) |>
#  aes(x = age, y = G3, color = sex)
#numeric_scatter + geom_point()
numeric_scatter <- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +
  geom_point() +
  geom_jitter(width = 0.2, alpha = 0.3) +
  labs(title = "Scatter Plot of Age vs G3.x by Sex",
       x = "Age",
       y = "Final Grade(G3)")
numeric_scatter
```

```{r}
numeric_scatter_absence <- ggplot(combine_data, aes(x = absences.x, y = G3.x, color = sex)) +
  geom_point() +
  geom_jitter(width = 0.2, alpha = 0.3) +
  labs(title = "Scatter Plot of Absences vs G3.x by Sex",
       x = "Absences",
       y = "Final Grade(G3)")
numeric_scatter_absence


```

-   Repeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable.

```{r}
numeric_scatter_facet <- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +
  geom_point() +
  geom_jitter(width = 0.2, alpha = 0.3) +
  facet_wrap(~ school) +  
  labs(title = "Scatter Plot of Age vs G3.x by Sex, Faceted by School",
    x = "Age",
    y = "Final Grade (G3)",
    color = "Sex"
  ) +
  theme_light()

numeric_scatter_facet

```

```{r}
numeric_scatter_absence_facet <- ggplot(combine_data, aes(x = absences.x, y = G3.x, color = sex)) +
  geom_point() +
  geom_jitter(width = 0.2, alpha = 0.3) +
  facet_wrap(~ address)
  labs(title = "Scatter Plot of Absences vs G3.x by Address",
       x = "Absences",
       y = "Final Grade(G3)") +
    theme_classic()
numeric_scatter_absence_facet
```

-   Repeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.

```{r}

categ_scatter <- ggplot(combine_data, aes(x = age, y = G3.x, color = sex)) +
  geom_point() +
  geom_jitter(width = 0.2, alpha = 0.3) +
  facet_grid(school ~ sex) +  # Facet by 'school' (rows) and 'sex' (columns)
  labs(
    title = "Scatter Plot of Age vs G3.x by School and Sex",
    x = "Age",
    y = "Final Grade (G3)",
    color = "Sex"
  ) 
categ_scatter
```
